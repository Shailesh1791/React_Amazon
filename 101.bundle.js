"use strict";(self.webpackChunkamazon_store=self.webpackChunkamazon_store||[]).push([[101],{188:(e,t,n)=>{n.d(t,{A:()=>D});var a=n(4848),i=n(8943),o=n(3514),s=n(2483),l=n(8227),r=n(5370),d=n(5916),c=n(3037),p=n(5342),u=n(5481),h=n(6540),m=n(2645),x=n(4562),y=n(1600),f=n(2097),g=n(2139),v=n(5493),j=n(6215),b=n(8161);var A=n(2062),T=n(6739),C=n(8132),O=n(1188);const w=(0,T.Ay)(C.A)`
    .MuiTextField {
        margin-top: 25px;
        padding: 25px;
    }
    & .MuiTextField-root {
        margin-top: 0px;
        padding: 25px;
    }
    & .MuiInputLabel-root {
        font-size: 0.7rem;
        line-height: 1.2rem;
        border-radius:2px;
    }
    & .MuiOutlinedInput-input {
        font-size: 0.7rem;
        line-height: 1.3rem;
        padding: 15px 14px;
    }
`;(0,T.Ay)(O.l)`
    .MuiTextField-root {
        margin-top: 0px;
        padding: 25px;
    }
    & .MuiInputLabel-root {
        font-size: 0.7rem;
        line-height: 1.2rem;
        border-radius:2px;
    }
    & .MuiOutlinedInput-input {
        font-size: 0.7rem;
        line-height: 1.3rem;
        padding: 15px 14px;
    }
`;const S=h.memo(function(e){const{fieledName:t,value:n,ddOptions:i,label:o,handleChange:s,isMandatory:l,toDisable:r,toHide:d}=e,{store:c,apiMethods:p}=(()=>{const[e]=(0,j.N)();return{store:e,apiMethods:(0,b.G)()}})(),u=c.storeProcess,[m,x]=(0,h.useState)([]),[y,f]=(0,h.useState)([]),g=()=>{return e=this,t=void 0,a=function*(){const e=yield p.getOrderDropDown();x(e)},new((n=void 0)||(n=Promise))(function(i,o){function s(e){try{r(a.next(e))}catch(e){o(e)}}function l(e){try{r(a.throw(e))}catch(e){o(e)}}function r(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n(function(e){e(t)})).then(s,l)}r((a=a.apply(e,t||[])).next())});var e,t,n,a};(0,h.useEffect)(()=>{f(n),console.log(u)},[n]),(0,h.useEffect)(()=>{i.isApiDriven&&g(),f(n)},[]);const v=(e,t)=>(0,a.jsx)(A.A,{value:e,children:t});return(0,a.jsx)(a.Fragment,{children:(0,a.jsxs)(w,{error:!(!l||y),select:!0,id:t,label:o,name:t,value:y||"",onChange:e=>(e=>{const t=e.target;f(t.value),s(e,"Select")})(e),size:"small","data-testid":t,disabled:r,style:{display:d?"none":"",marginTop:"10px"},fullWidth:!0,children:[i.isApiDriven&&m.map(e=>v(e[i.storeOptions.primaryKey],e[i.storeOptions.labelField])),i.isDirect&&i.directOptions.labels.map((e,t)=>v(i.directOptions.values[t],e))]},t)})});const D=h.memo(e=>{const{listOfFields:t,selectedRow:n,selectedCountry:j,actType:b,typeOfButton:A}=e,[T,C]=(0,h.useState)(!1),[O,D]=(0,h.useState)(t.fieldColumns),[I,k]=(0,h.useState)([]),[R,E]=(0,h.useState)(b),[M]=(0,h.useState)(A||"icon"),[z,F]=(0,h.useState)("OnClose"),[W,P]=(0,h.useState)(""),[H,N]=(0,h.useState)(""),L=j,[U,J]=(0,h.useState)({alertStatus:!1,alertMessage:"",alerttype:"error"}),[q,K]=(0,h.useState)({message:"",type:""}),G=()=>{F("OnClose"),C(!1)};(0,h.useEffect)(()=>{k(n),console.log(L||"")},[]);const _=(e,t)=>{const n=e.target,a=n.name;switch(t){case"TextField":k(Object.assign(Object.assign({},I),{[a]:n.value}));break;case"Select":k(Object.assign(Object.assign({},I),{[a]:n.value}))}},Q=(t,n)=>{return a=void 0,i=void 0,s=function*(){if(console.log(t),"save"===n){const t=I,n=yield e.userOnSubmit(t);n&&(200!==n.status&&201!==n.status||K({message:"Created Successfully",type:"success"})),n&&n.status&&G()}},new((o=void 0)||(o=Promise))(function(e,t){function n(e){try{r(s.next(e))}catch(e){t(e)}}function l(e){try{r(s.throw(e))}catch(e){t(e)}}function r(t){var a;t.done?e(t.value):(a=t.value,a instanceof o?a:new o(function(e){e(a)})).then(n,l)}r((s=s.apply(a,i||[])).next())});var a,i,o,s},X=()=>{switch(R){case"create":F("OpenCrud"),C(!0);break;case"view":F("OpenView"),C(!0);break;case"delete":F("OpenDelete"),C(!0);break;case"update":F("OpenUpdate"),C(!0)}};return(0,a.jsxs)(a.Fragment,{children:[q.message&&(0,a.jsx)(i.A,{severity:"success",children:q.message}),"create"===R&&"icon"===M?(0,a.jsx)(o.A,{title:R,arrow:!0,placement:"top-start",children:(0,a.jsx)(s.A,{style:{padding:"0px"},onClick:X,"data-testid":"create-button",children:(0,a.jsx)(m.A,{sx:{fontSize:25},style:{color:"#0473ea"}})})}):"","create"===R&&"button"===M?(0,a.jsx)(l.A,{variant:"contained",endIcon:(0,a.jsx)(m.A,{}),onClick:X,children:"Add"}):"","view"===R&&"icon"===M?(0,a.jsx)(o.A,{title:R,arrow:!0,placement:"top-start",children:(0,a.jsx)(s.A,{style:{padding:"2px"},onClick:X,"data-testid":"view-button",children:(0,a.jsx)(y.A,{sx:{fontSize:25},style:{color:"#0473ea"}})})}):"","update"===R&&"icon"===M?(0,a.jsx)(o.A,{title:R,arrow:!0,placement:"top-start",children:(0,a.jsx)(s.A,{style:{padding:"2px"},onClick:X,"data-testid":"update-button",children:(0,a.jsx)(f.A,{sx:{fontSize:25},style:{color:"#0473ea"}})})}):"","delete"===R&&"icon"===M?(0,a.jsx)(o.A,{title:R,arrow:!0,placement:"top-start",children:(0,a.jsx)(s.A,{style:{padding:"2px"},onClick:X,"data-testid":"delete-button",children:(0,a.jsx)(g.A,{sx:{fontSize:25},style:{color:"#0473ea"}})})}):"","OpenCrud"===z?(0,a.jsxs)(r.A,{fullWidth:!0,maxWidth:"sm",open:T,onClose:G,"aria-labelledby":"form-dialog-title",disableEscapeKeyDown:!0,children:[(0,a.jsx)(d.A,{id:"form-dialog-title",children:e.formTitle?e.formTitle:"Create Form"}),(0,a.jsx)(c.A,{children:O.map((t,n)=>{let i="update"==R?t.updateHide:t.createHide;return"TextField"===t.inputType?(0,a.jsx)(p.A,{children:(0,a.jsx)(w,{error:!!t.isRequired,helperText:"","data-testid":t.name,id:t.name,name:t.name,label:t.label,value:I[t.name]?I[t.name]:"",onChange:e=>_(e,t.inputType),type:t.valType,disabled:!1,fullWidth:!0,style:{display:i?"none":"",marginTop:"10px"}},t.name)}):"Select"===t.inputType?(0,a.jsx)(p.A,{children:(0,a.jsx)(S,{label:t.label,fieledName:t.name,value:I[t.name]?I[t.name]:"",ddOptions:t.inputOptions,isMandatory:t.isRequired,toDisable:"update"===e.formType&&t.onEditDisable,toHide:i,handleChange:_})}):void 0})}),(0,a.jsxs)(u.A,{sx:{display:"center"},children:[U.alertStatus?U.alertMessage:null,(0,a.jsx)(l.A,{onClick:G,variant:"outlined",startIcon:(0,a.jsx)(x.A,{}),color:"error","data-testid":"dialog-action-close",children:"Close"}),(0,a.jsx)(l.A,{onClick:e=>Q(e,"save"),variant:"outlined",startIcon:(0,a.jsx)(v.A,{}),color:"secondary","data-testid":"dialog-action-save",children:"Save"})]})]}):"","OpenView"===z?(0,a.jsxs)(r.A,{fullWidth:!0,maxWidth:"sm",open:T,onClose:G,"aria-labelledby":"form-dialog-title",disableEscapeKeyDown:!0,children:[(0,a.jsx)(d.A,{id:"form-dialog-title",children:e.formTitle?e.formTitle:"View Form"}),(0,a.jsx)(c.A,{children:O.map((t,n)=>{let i="update"==R?t.updateHide:t.createHide;return"TextField"===t.inputType?(0,a.jsx)(p.A,{children:(0,a.jsx)(w,{error:!!t.isRequired,helperText:"","data-testid":t.name,id:t.name,name:t.name,label:t.label,value:I[t.name]?I[t.name]:"",onChange:e=>_(e,t.inputType),type:t.valType,disabled:!0,fullWidth:!0,style:{display:i?"none":"",marginTop:"10px"}},t.name)}):"Select"===t.inputType?(0,a.jsx)(p.A,{children:(0,a.jsx)(S,{label:t.label,fieledName:t.name,value:I[t.name]?I[t.name]:"",ddOptions:t.inputOptions,isMandatory:t.isRequired,toDisable:"update"===e.formType&&t.onEditDisable,toHide:i,handleChange:_})}):void 0})}),(0,a.jsx)(u.A,{children:(0,a.jsx)(l.A,{onClick:G,variant:"outlined",startIcon:(0,a.jsx)(x.A,{}),color:"error","data-testid":"dialog-action-close",children:"Close"})})]}):"","OpenUpdate"===z?(0,a.jsxs)(r.A,{fullWidth:!0,maxWidth:"sm",open:T,onClose:G,"aria-labelledby":"form-dialog-title",disableEscapeKeyDown:!0,children:[(0,a.jsx)(d.A,{id:"form-dialog-title",children:e.formTitle?e.formTitle:"Update Form"}),(0,a.jsx)(c.A,{children:O.map((t,n)=>{let i="update"==R?t.updateHide:t.createHide;return"TextField"===t.inputType?(0,a.jsx)(p.A,{children:(0,a.jsx)(w,{error:!!t.isRequired,helperText:"","data-testid":t.name,id:t.name,name:t.name,label:t.label,value:I[t.name]?I[t.name]:"",onChange:e=>_(e,t.inputType),type:t.valType,disabled:!1,fullWidth:!0,style:{display:i?"none":"",marginTop:"10px"}},t.name)}):"Select"===t.inputType?(0,a.jsx)(p.A,{children:(0,a.jsx)(S,{label:t.label,fieledName:t.name,value:I[t.name]?I[t.name]:"",ddOptions:t.inputOptions,isMandatory:t.isRequired,toDisable:"update"===e.formType&&t.onEditDisable,toHide:i,handleChange:_})}):void 0})}),(0,a.jsxs)(u.A,{children:[(0,a.jsx)(l.A,{onClick:G,variant:"outlined",startIcon:(0,a.jsx)(x.A,{}),color:"error","data-testid":"dialog-action-close",children:"Close"}),(0,a.jsx)(l.A,{onClick:e=>Q(e,"delete"),variant:"outlined",startIcon:(0,a.jsx)(f.A,{}),color:"secondary","data-testid":"dialog-action-update",children:"Update"})]})]}):"","OpenDelete"===z?(0,a.jsxs)(r.A,{fullWidth:!0,maxWidth:"sm",open:T,onClose:G,"aria-labelledby":"form-dialog-title",disableEscapeKeyDown:!0,children:[(0,a.jsx)(d.A,{id:"form-dialog-title",children:e.formTitle?e.formTitle:"Delete Form"}),(0,a.jsx)(c.A,{children:O.map((t,n)=>{let i="update"==R?t.updateHide:t.createHide;return"TextField"===t.inputType?(0,a.jsx)(p.A,{children:(0,a.jsx)(w,{error:!!t.isRequired,helperText:"","data-testid":t.name,id:t.name,name:t.name,label:t.label,value:I[t.name]?I[t.name]:"",onChange:e=>_(e,t.inputType),type:t.valType,disabled:!1,fullWidth:!0,style:{display:i?"none":"",marginTop:"10px"}},t.name)}):"Select"===t.inputType?(0,a.jsx)(p.A,{children:(0,a.jsx)(S,{label:t.label,fieledName:t.name,value:I[t.name]?I[t.name]:"",ddOptions:t.inputOptions,isMandatory:t.isRequired,toDisable:"update"===e.formType&&t.onEditDisable,toHide:i,handleChange:_})}):void 0})}),(0,a.jsxs)(u.A,{children:[(0,a.jsx)(l.A,{onClick:G,variant:"outlined",startIcon:(0,a.jsx)(x.A,{}),color:"error","data-testid":"dialog-action-close",children:"Close"}),(0,a.jsx)(l.A,{onClick:e=>Q(e,"delete"),variant:"outlined",startIcon:(0,a.jsx)(g.A,{}),color:"secondary","data-testid":"dialog-action-delete",children:"Delete"})]})]}):""]})})},5820:(e,t,n)=>{n.d(t,{A:()=>s});var a=n(4848),i=n(6540);class o extends i.Component{constructor(){super(...arguments),this.state={hasError:!1}}static getDerivedStateFromError(e){return{hasError:!0}}componentDidCatch(e,t){console.error("Uncaught error:",e,t)}render(){return this.state.hasError?(0,a.jsx)("h1",{children:"Sorry.. there was an error"}):this.props.children}}const s=o},8161:(e,t,n)=>{n.d(t,{G:()=>d});const a=n(1083).A.create({baseURL:"http://localhost:8080/api/v1",timeout:5e3,headers:{"Content-Type":"application/json","Access-Control-Allow-Origin":"*"}});a.interceptors.request.use(e=>{const t="eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsInJvbGUiOiJBRE1JTiIsImlhdCI6MTc2MTc0MDU5NywiZXhwIjoxNzYxNzQwNjU3fQ.XbNsex9jRldvK-6WPQZOnQoRzGcr9roSxS0KsaJJp4k";return t&&(e.headers.Authorization=`Bearer ${t}`),e},e=>Promise.reject(e));const i=a;var o=n(6215),s=n(539);const l=()=>{const[e,t]=(0,o.N)();return console.log(e),{dispatchOrderList:e=>{t({type:s.X.SET_ORDER_LIST,data:e})},dispatchProductList:e=>{t({type:s.X.SET_PRODUCT_LIST,data:e})}}};var r=function(e,t,n,a){return new(n||(n=Promise))(function(i,o){function s(e){try{r(a.next(e))}catch(e){o(e)}}function l(e){try{r(a.throw(e))}catch(e){o(e)}}function r(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n(function(e){e(t)})).then(s,l)}r((a=a.apply(e,t||[])).next())})};const d=()=>{const{dispatchOrderList:e}=l(),{dispatchProductList:t}=l();return{getOrderDataList:()=>r(void 0,void 0,void 0,function*(){const t=(yield i.get("/orders")).data;return e(t),console.log("Orders Response -",t),t}),getProductDataList:()=>r(void 0,void 0,void 0,function*(){const e=(yield i.get("/products")).data;return t(e),console.log("Products Response -",e),e}),getProductDropDown:()=>r(void 0,void 0,void 0,function*(){const e=(yield i.get("/products")).data;return t(e),console.log("Products Response -",e),e}),getOrderDropDown:()=>r(void 0,void 0,void 0,function*(){const e=(yield i.get("/products")).data;return t(e),console.log("Products Response -",e),e})}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,